# Generated by Django 4.1.3 on 2022-12-26 21:53

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalisisModel',
            fields=[
                ('AnalisisID', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('nombreAnalisis', models.CharField(db_column='NombreAnalisis', max_length=100, unique=True)),
                ('Precio', models.FloatField(db_column='Precio', default=0)),
                ('observacion', models.TextField(db_column='Observacion', null=True)),
            ],
            options={
                'db_table': 'analisis',
            },
        ),
        migrations.CreateModel(
            name='AreaModel',
            fields=[
                ('AreaID', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('nombreArea', models.CharField(db_column='NombreArea', max_length=100, unique=True)),
                ('Descripcion', models.CharField(db_column='Descripcion', max_length=250)),
                ('observacion', models.TextField(db_column='Observacion', null=True)),
            ],
            options={
                'db_table': 'area',
            },
        ),
        migrations.CreateModel(
            name='AtencionModel',
            fields=[
                ('AtencionID', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('FechaAtencion', models.DateTimeField(auto_now_add=True, db_column='FechaAtencion')),
                ('SiguienteAtencion', models.DateTimeField(db_column='SiguienteAtencion')),
                ('Descuento', models.FloatField(db_column='descuento', default=0)),
                ('MontoT', models.FloatField(db_column='MontoT', default=0)),
                ('Observacion', models.TextField(db_column='Observacion')),
            ],
            options={
                'db_table': 'atencion',
            },
        ),
        migrations.CreateModel(
            name='ClienteModel',
            fields=[
                ('ClienteID', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('Documento', models.CharField(db_column='Documento', max_length=15, unique=True)),
                ('Nombre', models.CharField(db_column='Nombre', max_length=250)),
                ('ApePaterno', models.CharField(db_column='ApePaterno', max_length=100)),
                ('ApeMaterno', models.CharField(db_column='ApeMaterno', max_length=100)),
                ('NroContacto', models.CharField(db_column='NroContacto', max_length=12)),
                ('NroAuxiliar', models.CharField(db_column='NroAuxiliar', max_length=12, null=True)),
                ('Direccion', models.CharField(db_column='Direccion', max_length=250)),
                ('Correo', models.EmailField(db_column='Correo', max_length=250, unique=True)),
                ('Estado', models.CharField(choices=[('1', 'HABILITADO'), ('2', 'DESHABILITADO')], db_column='Estado', default='HABILITADO', max_length=50)),
                ('observacion', models.TextField(db_column='Observacion', null=True)),
            ],
            options={
                'db_table': 'Cliente',
            },
        ),
        migrations.CreateModel(
            name='DetalleOrdenAnalisisModel',
            fields=[
                ('DetalleOrdenID', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('Observacion', models.TextField(db_column='Observacion', null=True)),
                ('Analisis', models.ForeignKey(db_column='AnalisisID', on_delete=django.db.models.deletion.CASCADE, to='gestion.analisismodel')),
            ],
            options={
                'db_table': 'detalleordenanalisis',
            },
        ),
        migrations.CreateModel(
            name='DiagnosticoModel',
            fields=[
                ('DiagnosticoID', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('detalleDiagnostico', models.CharField(db_column='DetalleDiagnostico', max_length=50, unique=True)),
                ('observacion', models.TextField(db_column='Observacion', null=True)),
            ],
            options={
                'db_table': 'diagnostico',
            },
        ),
        migrations.CreateModel(
            name='EspecieModel',
            fields=[
                ('EspecieID', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('nombreEspecie', models.CharField(db_column='NombreEspecie', max_length=50, unique=True)),
                ('observacion', models.TextField(db_column='Observacion', null=True)),
            ],
            options={
                'db_table': 'especie',
            },
        ),
        migrations.CreateModel(
            name='PacienteModel',
            fields=[
                ('PacienteID', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('Nombre', models.CharField(db_column='Nombre', max_length=50)),
                ('FechaNac', models.DateTimeField(db_column='FechaNac')),
                ('Sexo', models.CharField(choices=[('1', 'MACHO'), ('2', 'HEMBRA')], db_column='Sexo', max_length=50)),
                ('Peso', models.FloatField(db_column='Peso')),
                ('CodigoChip', models.CharField(db_column='CodigoChip', max_length=100)),
                ('Foto', models.ImageField(blank='', db_column='Foto', default='', null=True, upload_to='fotospet/')),
                ('Estado', models.CharField(choices=[('1', 'HABILITADO'), ('2', 'DESHABILITADO')], db_column='Estado', default='HABILITADO', max_length=50)),
                ('observacion', models.TextField(db_column='Observacion', null=True)),
                ('Cliente', models.ForeignKey(db_column='ClienteID', on_delete=django.db.models.deletion.CASCADE, to='gestion.clientemodel')),
            ],
            options={
                'db_table': 'Paciente',
            },
        ),
        migrations.CreateModel(
            name='ServicioModel',
            fields=[
                ('ServicioID', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('nombreServicio', models.CharField(db_column='NombreServicio', max_length=100, unique=True)),
                ('observacion', models.TextField(db_column='Observacion', null=True)),
            ],
            options={
                'db_table': 'servicio',
            },
        ),
        migrations.CreateModel(
            name='TipoDocumentoModel',
            fields=[
                ('TipoDocumentoID', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('nombreDocumento', models.CharField(db_column='NombreDocumento', max_length=50, unique=True)),
                ('observacion', models.TextField(db_column='Observacion', null=True)),
            ],
            options={
                'db_table': 'tipodocumento',
            },
        ),
        migrations.CreateModel(
            name='TipoProductoModel',
            fields=[
                ('TipoProductoID', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('nombreTipoProducto', models.CharField(db_column='NombreTipoProducto', max_length=100, unique=True)),
                ('descripcion', models.CharField(db_column='Descripcion', max_length=250, null=True)),
                ('observacion', models.TextField(db_column='Observacion', null=True)),
            ],
            options={
                'db_table': 'tipoproducto',
            },
        ),
        migrations.CreateModel(
            name='TipoTrabajadorModel',
            fields=[
                ('TipoTrabajadorID', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('nombreTrabajo', models.CharField(db_column='NombreTrabajo', max_length=50, unique=True)),
                ('observacion', models.TextField(db_column='Observacion', null=True)),
            ],
            options={
                'db_table': 'tipotrabajador',
            },
        ),
        migrations.CreateModel(
            name='VentaModel',
            fields=[
                ('VentaID', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('Fecha', models.DateTimeField(auto_now_add=True, db_column='Fecha')),
                ('Estado', models.CharField(choices=[('1', 'GENERADA'), ('2', 'EN PREPARACION'), ('3', 'PENDIENTE'), ('4', 'ENVIADA'), ('5', 'ENTREGADA')], db_column='Estado', default='GENERADA', max_length=50)),
                ('Direccion', models.CharField(db_column='Direccion', default='ENTREGA EN TIENDA', max_length=250)),
                ('MontoT', models.FloatField(db_column='MontoT', default=0)),
                ('Descuento', models.FloatField(db_column='Descuento', default=0, null=True)),
                ('Observacion', models.TextField(db_column='Observacion', null=True)),
                ('Cliente', models.ForeignKey(db_column='ClienteID', on_delete=django.db.models.deletion.CASCADE, to='gestion.clientemodel')),
            ],
            options={
                'db_table': 'venta',
            },
        ),
        migrations.CreateModel(
            name='TrabajadorModel',
            fields=[
                ('TrabajadorID', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('Documento', models.CharField(db_column='Documento', max_length=15, unique=True)),
                ('Nombre', models.CharField(db_column='Nombre', max_length=250)),
                ('ApePaterno', models.CharField(db_column='ApePaterno', max_length=100)),
                ('ApeMaterno', models.CharField(db_column='ApeMaterno', max_length=100)),
                ('NroContacto', models.CharField(db_column='NroContacto', max_length=12)),
                ('NroAuxiliar', models.CharField(db_column='NroAuxiliar', max_length=12, null=True)),
                ('Direccion', models.CharField(db_column='Direccion', max_length=250)),
                ('Correo', models.EmailField(db_column='Correo', max_length=250, unique=True)),
                ('Estado', models.CharField(choices=[('1', 'HABILITADO'), ('2', 'DESHABILITADO')], db_column='Estado', default='HABILITADO', max_length=50)),
                ('observacion', models.TextField(db_column='Observacion', null=True)),
                ('TipoDocumento', models.ForeignKey(db_column='TipoDocumentoID', on_delete=django.db.models.deletion.CASCADE, to='gestion.tipodocumentomodel')),
                ('TipoTrabajador', models.ForeignKey(db_column='TipoTrabajadorID', on_delete=django.db.models.deletion.CASCADE, to='gestion.tipotrabajadormodel')),
            ],
            options={
                'db_table': 'Trabajador',
            },
        ),
        migrations.CreateModel(
            name='TipoDetalleAtencionModel',
            fields=[
                ('TipoDetalleAtencionID', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('NombreDetalle', models.CharField(db_column='NombreDetalle', max_length=100, unique=True)),
                ('Precio', models.FloatField(db_column='precio', default=0)),
                ('Clinico', models.BooleanField(default=True)),
                ('observacion', models.TextField(db_column='Observacion', null=True)),
                ('Servicio', models.ForeignKey(db_column='ServicioID', on_delete=django.db.models.deletion.CASCADE, to='gestion.serviciomodel')),
            ],
            options={
                'db_table': 'tipodetalleatencion',
            },
        ),
        migrations.CreateModel(
            name='servicioTrabajadorModel',
            fields=[
                ('SerTrabID', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('observacion', models.TextField(db_column='Observacion', null=True)),
                ('Servicio', models.ForeignKey(db_column='ServicioID', on_delete=django.db.models.deletion.CASCADE, to='gestion.serviciomodel')),
                ('Trabajador', models.ForeignKey(db_column='TrabajadorID', on_delete=django.db.models.deletion.CASCADE, to='gestion.trabajadormodel')),
            ],
            options={
                'db_table': 'servicioTrabajador',
                'unique_together': {('Servicio', 'Trabajador')},
            },
        ),
        migrations.CreateModel(
            name='ResultadoModel',
            fields=[
                ('ResultadoID', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('DescripcionResultado', models.CharField(db_column='DescripcionResultado', max_length=45)),
                ('Fecha', models.DateField(db_column='Fecha')),
                ('Observacion', models.CharField(db_column='Observacion', max_length=250, null=True)),
                ('Indicacion', models.CharField(db_column='Indicacion', max_length=250, null=True)),
                ('DetalleOrdenID', models.ForeignKey(db_column='DetalleOrdenID', on_delete=django.db.models.deletion.CASCADE, to='gestion.detalleordenanalisismodel')),
            ],
            options={
                'db_table': 'resultado',
            },
        ),
        migrations.CreateModel(
            name='RecordatorioModel',
            fields=[
                ('RecordatorioID', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('FechaRecordatorio', models.DateTimeField(auto_now_add=True, db_column='FechaRecordatorio')),
                ('Atencion', models.ForeignKey(db_column='AtencionID', on_delete=django.db.models.deletion.CASCADE, to='gestion.atencionmodel')),
                ('Paciente', models.ForeignKey(db_column='PacienteID', on_delete=django.db.models.deletion.CASCADE, to='gestion.pacientemodel')),
                ('Servicio', models.ForeignKey(db_column='ServicioID', on_delete=django.db.models.deletion.CASCADE, to='gestion.serviciomodel')),
            ],
            options={
                'db_table': 'recordatorio',
            },
        ),
        migrations.CreateModel(
            name='RazaModel',
            fields=[
                ('RazaID', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('NombreRaza', models.CharField(db_column='NombreRaza', max_length=50, unique=True)),
                ('Observacion', models.TextField(db_column='Observacion', null=True)),
                ('Especie', models.ForeignKey(db_column='EspecieID', on_delete=django.db.models.deletion.CASCADE, to='gestion.especiemodel')),
            ],
            options={
                'db_table': 'Raza',
            },
        ),
        migrations.CreateModel(
            name='ProductoModel',
            fields=[
                ('ProductoID', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('NombreProducto', models.CharField(db_column='NombreProducto', max_length=250, unique=True)),
                ('Descripcion', models.CharField(db_column='Descripcion', max_length=250, null=True)),
                ('PrecioUnitario', models.FloatField(db_column='PrecioUnitario', default=0)),
                ('Observacion', models.CharField(db_column='Observacion', max_length=250, null=True)),
                ('TipoProducto', models.ForeignKey(db_column='TipoproductoID', on_delete=django.db.models.deletion.CASCADE, to='gestion.tipoproductomodel')),
            ],
            options={
                'db_table': 'producto',
            },
        ),
        migrations.AddField(
            model_name='pacientemodel',
            name='Raza',
            field=models.ForeignKey(db_column='RazaID', on_delete=django.db.models.deletion.CASCADE, to='gestion.razamodel'),
        ),
        migrations.CreateModel(
            name='OrdenLaboratorioModel',
            fields=[
                ('OrdenlabID', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('Fecha', models.DateTimeField(auto_now_add=True, db_column='Fecha')),
                ('Descuento', models.FloatField(db_column='Descuento', default=0)),
                ('Observacion', models.TextField(db_column='Observacion', null=True)),
                ('Atencion', models.ForeignKey(db_column='AtencionID', on_delete=django.db.models.deletion.CASCADE, to='gestion.atencionmodel')),
                ('Trabajador', models.ForeignKey(db_column='TrabajadorID', on_delete=django.db.models.deletion.CASCADE, to='gestion.trabajadormodel')),
            ],
            options={
                'db_table': 'ordenlaboratorio',
            },
        ),
        migrations.CreateModel(
            name='HClinicaModel',
            fields=[
                ('HClinicaID', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('FechaApertura', models.DateTimeField(auto_now_add=True, db_column='FechaApertura')),
                ('observacion', models.TextField(db_column='Observacion', null=True)),
                ('Cliente', models.ForeignKey(db_column='ClienteID', on_delete=django.db.models.deletion.CASCADE, to='gestion.clientemodel')),
                ('Paciente', models.ForeignKey(db_column='PacienteID', on_delete=django.db.models.deletion.CASCADE, to='gestion.pacientemodel')),
            ],
            options={
                'db_table': 'HIstoria_clinica',
                'unique_together': {('Cliente', 'Paciente')},
            },
        ),
        migrations.AddField(
            model_name='detalleordenanalisismodel',
            name='OrdenLab',
            field=models.ForeignKey(db_column='OrdenLabID', on_delete=django.db.models.deletion.CASCADE, to='gestion.ordenlaboratoriomodel'),
        ),
        migrations.AddField(
            model_name='clientemodel',
            name='TipoDocumento',
            field=models.ForeignKey(db_column='TipoDocumentoID', on_delete=django.db.models.deletion.CASCADE, to='gestion.tipodocumentomodel'),
        ),
        migrations.AddField(
            model_name='atencionmodel',
            name='HClinica',
            field=models.ForeignKey(db_column='HClinicaID', on_delete=django.db.models.deletion.CASCADE, to='gestion.hclinicamodel'),
        ),
        migrations.CreateModel(
            name='AreaServicioModel',
            fields=[
                ('AreaTrabID', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('Fecha', models.DateField(db_column='fecha')),
                ('horaInicio', models.DateTimeField(db_column='horainicio')),
                ('horaFin', models.DateTimeField(db_column='horafin')),
                ('cupo', models.IntegerField(db_column='Cupo')),
                ('observacion', models.TextField(db_column='Observacion', null=True)),
                ('Area', models.ForeignKey(db_column='AreaID', on_delete=django.db.models.deletion.CASCADE, to='gestion.areamodel')),
                ('ServTrab', models.ForeignKey(db_column='ServTrabID', on_delete=django.db.models.deletion.CASCADE, to='gestion.serviciotrabajadormodel')),
            ],
            options={
                'db_table': 'areaServicio',
                'unique_together': {('Area', 'ServTrab', 'Fecha', 'horaInicio')},
            },
        ),
        migrations.CreateModel(
            name='AlmacenModel',
            fields=[
                ('AlmacenID', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('Cantidad', models.FloatField(db_column='Cantidad')),
                ('FechaIngreso', models.DateField(db_column='FechaIngreso')),
                ('FechaVencimiento', models.DateField(db_column='FechaVencimiento', null=True)),
                ('observacion', models.TextField(db_column='observacion', null=True)),
                ('Producto', models.ForeignKey(db_column='ProductoID', on_delete=django.db.models.deletion.CASCADE, to='gestion.productomodel', unique=True)),
            ],
            options={
                'db_table': 'almacen',
            },
        ),
        migrations.CreateModel(
            name='UsuarioModel',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('TipoUsuario', models.CharField(choices=[('ADMIN', 'ADMINISTRADOR'), ('MEDICO', 'MEDICO'), ('GROOMER', 'GROOMER'), ('ASISTENTE MEDICO', 'ASISTENTE MEDICO'), ('ASISTENTE ADMINISTRATIVO', 'ASISTENTE ADMINISTRATIVO'), ('VENDEDOR', 'VENDEDOR'), ('CLIENTE', 'CLIENTE')], db_column='TipoUsuario', max_length=40)),
                ('password', models.TextField(db_column='password')),
                ('Correo', models.EmailField(db_column='Correo', max_length=250, unique=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'Usuario',
            },
        ),
        migrations.CreateModel(
            name='DetalleVentaModel',
            fields=[
                ('DetalleVentaID', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('Cantidad', models.FloatField(db_column='Cantidad', default=0)),
                ('MontoD', models.FloatField(db_column='MontoD', default=0)),
                ('Producto', models.ForeignKey(db_column='ProductoID', on_delete=django.db.models.deletion.CASCADE, to='gestion.productomodel')),
                ('Venta', models.ForeignKey(db_column='VentaID', on_delete=django.db.models.deletion.CASCADE, to='gestion.ventamodel')),
            ],
            options={
                'db_table': 'detalleventa',
                'unique_together': {('Venta', 'Producto')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='detalleordenanalisismodel',
            unique_together={('OrdenLab', 'Analisis')},
        ),
        migrations.CreateModel(
            name='DetalleAtencionServicioModel',
            fields=[
                ('DetalleAtencionID', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('Cantidad', models.FloatField(db_column='Cantidad')),
                ('MontoD', models.FloatField(db_column='MontoD', default=0)),
                ('Observacion', models.TextField(db_column='Observacion', null=True)),
                ('Areatrab', models.ForeignKey(db_column='AreaID', on_delete=django.db.models.deletion.CASCADE, to='gestion.areaserviciomodel')),
                ('Atencion', models.ForeignKey(db_column='AtencionID', on_delete=django.db.models.deletion.CASCADE, to='gestion.atencionmodel')),
                ('Servicio', models.ForeignKey(db_column='ServicioID', on_delete=django.db.models.deletion.CASCADE, to='gestion.serviciomodel')),
                ('TipoDetalleAtencion', models.ForeignKey(db_column='TipodetalleAtencionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='gestion.tipodetalleatencionmodel')),
                ('Trabajador', models.ForeignKey(db_column='TrabajadorID', on_delete=django.db.models.deletion.CASCADE, to='gestion.trabajadormodel')),
            ],
            options={
                'db_table': 'DetalleAtencionServicio',
                'unique_together': {('Atencion', 'Trabajador')},
            },
        ),
        migrations.CreateModel(
            name='DetalleAtencionClinicaModel',
            fields=[
                ('DetalleAtencionID', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('Pronostico', models.CharField(choices=[('1', 'PRESUNTIVO'), ('2', 'AFIRMATIVO')], db_column='Pronostico', default='PRESUNTIVO', max_length=50)),
                ('Cantidad', models.FloatField(db_column='Cantidad')),
                ('MontoD', models.FloatField(db_column='MontoD', default=0)),
                ('Observacion', models.TextField(db_column='Observacion', null=True)),
                ('Areatrab', models.ForeignKey(db_column='AreaID', on_delete=django.db.models.deletion.CASCADE, to='gestion.areaserviciomodel')),
                ('Atencion', models.ForeignKey(db_column='AtencionID', on_delete=django.db.models.deletion.CASCADE, to='gestion.atencionmodel')),
                ('Diagnostico', models.ForeignKey(db_column='DiagnosticoID', null=True, on_delete=django.db.models.deletion.CASCADE, to='gestion.diagnosticomodel')),
                ('TipoDetalleAtencion', models.ForeignKey(db_column='TipodetalleAtencionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='gestion.tipodetalleatencionmodel')),
                ('Trabajador', models.ForeignKey(db_column='TrabajadorID', on_delete=django.db.models.deletion.CASCADE, to='gestion.trabajadormodel')),
            ],
            options={
                'db_table': 'DetalleAtencionClinica',
                'unique_together': {('Atencion', 'Trabajador')},
            },
        ),
        migrations.CreateModel(
            name='CitaModel',
            fields=[
                ('CitasID', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('Areatrab', models.ForeignKey(db_column='AreaID', on_delete=django.db.models.deletion.CASCADE, to='gestion.areaserviciomodel')),
                ('Cliente', models.ForeignKey(db_column='ClienteID', on_delete=django.db.models.deletion.CASCADE, to='gestion.clientemodel')),
                ('Paciente', models.ForeignKey(db_column='PacienteID', on_delete=django.db.models.deletion.CASCADE, to='gestion.pacientemodel')),
                ('Servicio', models.ForeignKey(db_column='ServicioID', on_delete=django.db.models.deletion.CASCADE, to='gestion.serviciomodel')),
            ],
            options={
                'db_table': 'citas',
                'unique_together': {('Areatrab', 'Cliente', 'Servicio', 'Paciente')},
            },
        ),
    ]
